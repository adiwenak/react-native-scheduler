import { shallow } from "enzyme";
import * as React from "react";
import { create } from "react-test-renderer";
import { userCollections } from "../__stubsData/data";
import { DateCalendarBox } from "./DateCalendarBox";
describe("<DateCalendarBox />", function () {
    var onPressHandlerMock = jest.fn();
    it("should render with given props", function () {
        var component = create(<DateCalendarBox date={1} isSelected={true} isWeekend={false} whosBusy={userCollections} dateBoxOnPressHandler={onPressHandlerMock} boxWidth={50} dateFontSize={16}/>).toJSON();
        expect(component).toMatchSnapshot();
    });
    it("should call onPressHandler when component is pressed", function () {
        var component = shallow(<DateCalendarBox date={1} isSelected={true} isWeekend={false} whosBusy={userCollections} dateBoxOnPressHandler={onPressHandlerMock} boxWidth={50} dateFontSize={16}/>);
        component.props().onPress();
        expect(onPressHandlerMock.mock.calls.length).toBe(1);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2FrdXJuYWRpL1Byb2plY3RzL3JlYWN0LW5hdGl2ZS1zY2hlZHVsZXIvbGlicmFyeS9DYWxlbmRhck1vbnRoL0RhdGVDYWxlbmRhckJveC9EYXRlQ2FsZW5kYXJCb3gudGVzdC50c3giLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFFBQVEsQ0FBQTtBQUNoQyxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQUM5QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUE7QUFDNUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFBO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUVuRCxRQUFRLENBQUMscUJBQXFCLEVBQUU7SUFDNUIsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUE7SUFFcEMsRUFBRSxDQUFDLGdDQUFnQyxFQUFFO1FBQ2pDLElBQU0sU0FBUyxHQUFHLE1BQU0sQ0FDcEIsQ0FBQyxlQUFlLENBQ1osSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQ1IsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQ2pCLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUNqQixRQUFRLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FDMUIscUJBQXFCLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUMxQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FDYixZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFDbkIsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFBO1FBQ2hCLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQTtJQUN2QyxDQUFDLENBQUMsQ0FBQTtJQUVGLEVBQUUsQ0FBQyxzREFBc0QsRUFBRTtRQUV2RCxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQ3JCLENBQUMsZUFBZSxDQUNaLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUNSLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUNqQixTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FDakIsUUFBUSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQzFCLHFCQUFxQixDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FDMUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQ2IsWUFBWSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQ25CLENBQ0wsQ0FBQTtRQUVELFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUMzQixNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDeEQsQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYWt1cm5hZGkvUHJvamVjdHMvcmVhY3QtbmF0aXZlLXNjaGVkdWxlci9saWJyYXJ5L0NhbGVuZGFyTW9udGgvRGF0ZUNhbGVuZGFyQm94L0RhdGVDYWxlbmRhckJveC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaGFsbG93IH0gZnJvbSBcImVuenltZVwiXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgY3JlYXRlIH0gZnJvbSBcInJlYWN0LXRlc3QtcmVuZGVyZXJcIlxuaW1wb3J0IHsgdXNlckNvbGxlY3Rpb25zIH0gZnJvbSBcIi4uL19fc3R1YnNEYXRhL2RhdGFcIlxuaW1wb3J0IHsgRGF0ZUNhbGVuZGFyQm94IH0gZnJvbSBcIi4vRGF0ZUNhbGVuZGFyQm94XCJcblxuZGVzY3JpYmUoXCI8RGF0ZUNhbGVuZGFyQm94IC8+XCIsICgpID0+IHtcbiAgICBjb25zdCBvblByZXNzSGFuZGxlck1vY2sgPSBqZXN0LmZuKClcblxuICAgIGl0KFwic2hvdWxkIHJlbmRlciB3aXRoIGdpdmVuIHByb3BzXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gY3JlYXRlKFxuICAgICAgICAgICAgPERhdGVDYWxlbmRhckJveFxuICAgICAgICAgICAgICAgIGRhdGU9ezF9XG4gICAgICAgICAgICAgICAgaXNTZWxlY3RlZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICBpc1dlZWtlbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHdob3NCdXN5PXt1c2VyQ29sbGVjdGlvbnN9XG4gICAgICAgICAgICAgICAgZGF0ZUJveE9uUHJlc3NIYW5kbGVyPXtvblByZXNzSGFuZGxlck1vY2t9XG4gICAgICAgICAgICAgICAgYm94V2lkdGg9ezUwfVxuICAgICAgICAgICAgICAgIGRhdGVGb250U2l6ZT17MTZ9XG4gICAgICAgICAgICAvPikudG9KU09OKClcbiAgICAgICAgZXhwZWN0KGNvbXBvbmVudCkudG9NYXRjaFNuYXBzaG90KClcbiAgICB9KVxuXG4gICAgaXQoXCJzaG91bGQgY2FsbCBvblByZXNzSGFuZGxlciB3aGVuIGNvbXBvbmVudCBpcyBwcmVzc2VkXCIsICgpID0+IHtcblxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBzaGFsbG93KFxuICAgICAgICAgICAgPERhdGVDYWxlbmRhckJveFxuICAgICAgICAgICAgICAgIGRhdGU9ezF9XG4gICAgICAgICAgICAgICAgaXNTZWxlY3RlZD17dHJ1ZX1cbiAgICAgICAgICAgICAgICBpc1dlZWtlbmQ9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHdob3NCdXN5PXt1c2VyQ29sbGVjdGlvbnN9XG4gICAgICAgICAgICAgICAgZGF0ZUJveE9uUHJlc3NIYW5kbGVyPXtvblByZXNzSGFuZGxlck1vY2t9XG4gICAgICAgICAgICAgICAgYm94V2lkdGg9ezUwfVxuICAgICAgICAgICAgICAgIGRhdGVGb250U2l6ZT17MTZ9XG4gICAgICAgICAgICAvPlxuICAgICAgICApXG5cbiAgICAgICAgY29tcG9uZW50LnByb3BzKCkub25QcmVzcygpXG4gICAgICAgIGV4cGVjdChvblByZXNzSGFuZGxlck1vY2subW9jay5jYWxscy5sZW5ndGgpLnRvQmUoMSlcbiAgICB9KVxufSlcbiJdLCJ2ZXJzaW9uIjozfQ==