d88ee96c7f0d5fccb331147475387f35









'use strict';var




AnimatedWithChildren = function (_AnimatedNode) {require("@babel/runtime/helpers/inherits")(AnimatedWithChildren, _AnimatedNode);


  function AnimatedWithChildren() {var _this;require("@babel/runtime/helpers/classCallCheck")(this, AnimatedWithChildren);
    _this = require("@babel/runtime/helpers/possibleConstructorReturn")(this, require("@babel/runtime/helpers/getPrototypeOf")(AnimatedWithChildren).call(this));
    _this._children = [];return _this;
  }require("@babel/runtime/helpers/createClass")(AnimatedWithChildren, [{ key: "__makeNative", value: function __makeNative()

    {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {var _ref;if (_isArray) {if (_i >= _iterator.length) break;_ref = _iterator[_i++];} else {_i = _iterator.next();if (_i.done) break;_ref = _i.value;}var _child = _ref;
          _child.__makeNative();
          require("../NativeAnimatedHelper").API.connectAnimatedNodes(
          this.__getNativeTag(),
          _child.__getNativeTag());

        }
      }
    } }, { key: "__addChild", value: function __addChild(

    child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {

        child.__makeNative();
        require("../NativeAnimatedHelper").API.connectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
    } }, { key: "__removeChild", value: function __removeChild(

    child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn("Trying to remove a child that doesn't exist");
        return;
      }
      if (this.__isNative && child.__isNative) {
        require("../NativeAnimatedHelper").API.disconnectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    } }, { key: "__getChildren", value: function __getChildren()

    {
      return this._children;
    } }]);return AnimatedWithChildren;}(require("./AnimatedNode"));


module.exports = AnimatedWithChildren;