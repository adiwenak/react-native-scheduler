{"version":3,"sources":["/Users/akurnadi/Projects/react-native-scheduler/library/CalendarMonth/MonthSelection/MonthSelection.tsx"],"names":[],"mappings":"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","sourcesContent":["import moment from \"moment\"\nimport * as React from \"react\"\nimport { Component } from \"react\"\nimport { Image, Text, TouchableHighlight, View } from \"react-native\"\nimport { Month } from \"../../shared/model\"\nimport { styles } from \"./MonthSelection.styles\"\n\nenum MonthAsString {\n    January = \"January\",\n    February = \"February\",\n    March = \"March\",\n    April = \"April\",\n    May = \"May\",\n    June = \"June\",\n    July = \"July\",\n    August = \"August\",\n    September = \"September\",\n    October = \"October\",\n    November = \"November\",\n    December = \"December\"\n}\n\nexport interface MonthSelectionProps {\n    onMonthChange?: (month: Month, year: number) => void\n    currentYear?: number\n    currentMonth?: Month\n}\n\nexport interface MonthSelectionState {\n    currentMonth: Month\n    currentYear: number\n}\n\nexport class MonthSelection extends Component<MonthSelectionProps, MonthSelectionState> {\n    private allMonths: MonthAsString[] = [MonthAsString.January, MonthAsString.February,\n        MonthAsString.March, MonthAsString.April, MonthAsString.May,\n        MonthAsString.June, MonthAsString.July, MonthAsString.August,\n        MonthAsString.September, MonthAsString.October, MonthAsString.November, MonthAsString.December]\n\n    constructor(props: MonthSelectionProps) {\n        super(props)\n        this.state = {\n            currentMonth: props.currentMonth || Month.January,\n            currentYear: props.currentYear || moment().year()\n        }\n    }\n\n    render() {\n        const title = `${this.allMonths[this.state.currentMonth]} ${this.state.currentYear}`\n        return(\n            <View style={styles.container}>\n                <TouchableHighlight\n                    onPress={this.handlePreviousButtonPress}\n                    accessibilityLabel={\"button-month-prev\"}\n                    style={[styles.containerButton, styles.containerButtonLeft]}\n                >\n                    <Image\n                        source={require(\"./asset/arrow-back.png\")} resizeMode={\"center\"}\n                        style={styles.button}\n                    />\n                </TouchableHighlight>\n                <View style={styles.containerTitle}>\n                    <Text style={styles.title}>{title}</Text>\n                </View>\n                <TouchableHighlight\n                    onPress={this.handleNextButtonPress}\n                    accessibilityLabel={\"button-month-next\"}\n                    style={[styles.containerButton, styles.containerButtonRight]}\n                >\n                    <Image\n                        source={require(\"./asset/arrow-forward.png\")} resizeMode={\"center\"}\n                        style={styles.button}\n                    />\n                </TouchableHighlight>\n            </View >\n        )\n    }\n\n    private onMonthChange = (month: Month, year: number) => {\n        if (this.props.onMonthChange) {\n            this.props.onMonthChange(month, year)\n        }\n    }\n\n    private handlePreviousButtonPress = () => {\n        let { currentMonth, currentYear } = this.state\n        if (currentMonth > 0) {\n            currentMonth -= 1\n        } else {\n            currentYear -= 1\n            currentMonth = Month.December\n        }\n\n        this.setState({\n            currentMonth,\n            currentYear\n        })\n\n        this.onMonthChange(currentMonth, currentYear)\n    }\n\n    private handleNextButtonPress = () => {\n        let { currentMonth, currentYear } = this.state\n        if (currentMonth < this.allMonths.length - 1) {\n            currentMonth += 1\n        } else {\n            currentYear += 1\n            currentMonth = Month.January\n        }\n\n        this.setState({\n            currentMonth,\n            currentYear\n        })\n\n        this.onMonthChange(currentMonth, currentYear)\n    }\n}\n"]}