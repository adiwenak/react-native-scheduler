27dae05880b47584928d097709498b58









'use strict';var _jsxFileName = "/Users/akurnadi/Projects/react-native-scheduler/node_modules/react-native/Libraries/Animated/src/createAnimatedComponent.js";








function createAnimatedComponent(Component) {
  require('fbjs/lib/invariant')(
  typeof Component !== 'function' ||
  Component.prototype && Component.prototype.isReactComponent,
  '`createAnimatedComponent` does not support stateless functional components; ' +
  'use a class component instead.');var


  AnimatedComponent = function (_React$Component) {require("@babel/runtime/helpers/inherits")(AnimatedComponent, _React$Component);









    function AnimatedComponent(props) {var _this;require("@babel/runtime/helpers/classCallCheck")(this, AnimatedComponent);
      _this = require("@babel/runtime/helpers/possibleConstructorReturn")(this, require("@babel/runtime/helpers/getPrototypeOf")(AnimatedComponent).call(this, props));_this._invokeAnimatedPropsCallbackOnMount = false;_this._eventDetachers = [];_this.




















































      _animatedPropsCallback = function () {
        if (_this._component == null) {





          _this._invokeAnimatedPropsCallbackOnMount = true;
        } else if (
        AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY ||
        typeof _this._component.setNativeProps !== 'function')
        {
          _this.forceUpdate();
        } else if (!_this._propsAnimated.__isNative) {
          _this._component.setNativeProps(
          _this._propsAnimated.__getAnimatedValue());

        } else {
          throw new Error(
          'Attempting to run JS driven animation on animated ' +
          'node that has been moved to "native" earlier by starting an ' +
          'animation with `useNativeDriver: true`');

        }
      };_this._setComponentRef = _this._setComponentRef.bind(require("@babel/runtime/helpers/assertThisInitialized")(require("@babel/runtime/helpers/assertThisInitialized")(_this)));return _this;}require("@babel/runtime/helpers/createClass")(AnimatedComponent, [{ key: "componentWillUnmount", value: function componentWillUnmount() {this._propsAnimated && this._propsAnimated.__detach();this._detachNativeEvents();} }, { key: "setNativeProps", value: function setNativeProps(props) {this._component.setNativeProps(props);} }, { key: "UNSAFE_componentWillMount", value: function UNSAFE_componentWillMount() {this._attachProps(this.props);} }, { key: "componentDidMount", value: function componentDidMount() {if (this._invokeAnimatedPropsCallbackOnMount) {this._invokeAnimatedPropsCallbackOnMount = false;this._animatedPropsCallback();}this._propsAnimated.setNativeView(this._component);this._attachNativeEvents();} }, { key: "_attachNativeEvents", value: function _attachNativeEvents() {var _this2 = this;var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;var _loop = function _loop(key) {var prop = _this2.props[key];if (prop instanceof require("./AnimatedEvent").AnimatedEvent && prop.__isNative) {prop.__attach(scrollableNode, key);_this2._eventDetachers.push(function () {return prop.__detach(scrollableNode, key);});}};for (var key in this.props) {_loop(key);}} }, { key: "_detachNativeEvents", value: function _detachNativeEvents() {this._eventDetachers.forEach(function (remove) {return remove();});this._eventDetachers = [];} }, { key: "_attachProps", value: function _attachProps(

      nextProps) {
        var oldPropsAnimated = this._propsAnimated;

        this._propsAnimated = new (require("./nodes/AnimatedProps"))(
        nextProps,
        this._animatedPropsCallback);










        oldPropsAnimated && oldPropsAnimated.__detach();
      } }, { key: "UNSAFE_componentWillReceiveProps", value: function UNSAFE_componentWillReceiveProps(

      newProps) {
        this._attachProps(newProps);
      } }, { key: "componentDidUpdate", value: function componentDidUpdate(

      prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
      } }, { key: "render", value: function render()

      {
        var props = this._propsAnimated.__getValue();
        return (
          require('react').createElement(Component, require("@babel/runtime/helpers/extends")({},
          props, {
            ref: this._setComponentRef,




            collapsable:
            this._propsAnimated.__isNative ? false : props.collapsable, __source: { fileName: _jsxFileName, lineNumber: 153 } })));



      } }, { key: "_setComponentRef", value: function _setComponentRef(

      c) {
        this._prevComponent = this._component;
        this._component = c;
      } }, { key: "getNode", value: function getNode()



      {
        return this._component;
      } }]);return AnimatedComponent;}(require('react').Component);AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;


  var propTypes = Component.propTypes;

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!propTypes) {
        return;
      }

      for (var key in require("../../Components/View/ViewStylePropTypes")) {
        if (!propTypes[key] && props[key] !== undefined) {
          console.warn(
          'You are setting the style `{ ' +
          key +
          ': ... }` as a prop. You ' +
          'should nest it in a style object. ' +
          'E.g. `{ style: { ' +
          key +
          ': ... } }`');

        }
      }
    } };


  return AnimatedComponent;
}

module.exports = createAnimatedComponent;